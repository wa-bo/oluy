import { youtubeSearch } from '@bochilteam/scraper'
let handler = async (m, { conn, command, text, usedPrefix }) => {
if (!text) throw `*[‚ùóINFO‚ùó] NOMBRE DE LA CANCION FALTANTE, POR FAVOR INGRESE EL COMANDO MAS EL NOMBRE/TITULO DE UNA CANCION*\n\n*‚Äî‚óâ EJEMPLO:*\n*${usedPrefix + command} Good Feeling - Flo Rida*`
let vid = (await youtubeSearch(text)).video[0]
if (!vid) throw '*[‚ùóINFO‚ùó] LO SIENTO, NO PUDE ENCONTRAR EL AUDIO/VIDEO, INTENTE CON OTRO NOMBRE/TITULO*'
try {
let { title, description, thumbnail, videoId, durationH, viewH, publishedTime } = vid
const url = 'https://www.youtube.com/watch?v=' + videoId
conn.sendHydrated(m.chat, `
üìå *–ù–ê–ó–í–ê–ù–ò–ï:* ${title}
üìá *–û–ü–ò–°–ê–ù–ò–ï:* ${description}
üìÜ *–û–ü–£–ë–õ–ò–ö–û–í–ê–ù–û:* ${publishedTime}
‚åö *–ü–†–û–î–û–õ–ñ–ò–¢–ï–õ–¨–ù–û–°–¢–¨:* ${durationH}
üëÄ *–ü–†–û–°–ú–û–¢–†–ï–ù–û:* ${viewH}
`.trim(), author, thumbnail, `${url}`, 'URL', null, null, [
['–ü–ï–°–ù–Ø', `${usedPrefix}yta ${url}`],
['–ö–õ–ò–ü', `${usedPrefix}ytv ${url}`],
['–í–°–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´', `${usedPrefix}playlist ${text}`]  
], m)
}catch(e){
m.reply('*[‚ùóINFO‚ùó] ERROR, POR FAVOR VUELVA A INTENTARLO*')
console.log(e)
}}
handler.help = ['play', 'play2'].map(v => v + ' <pencarian>')
handler.tags = ['downloader']
handler.command = /^–ø–µ—Å–Ω—è?$/i
export default handler
